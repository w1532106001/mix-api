<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whc.mix_api.mapper.VideoTagMapper">
    <resultMap id="BaseResultMap" type="com.whc.mix_api.model.VideoTag">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="video_id" jdbcType="INTEGER" property="videoId"/>
        <result column="tag_id" jdbcType="INTEGER" property="tagId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <resultMap id="TagVO" type="com.whc.mix_api.model.vo.TagVO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="group_id" jdbcType="INTEGER" property="groupId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, video_id, tag_id, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from video_tag
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from video_tag
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.whc.mix_api.model.VideoTag">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into video_tag (video_id, tag_id, create_time,
        update_time)
        values (#{videoId,jdbcType=INTEGER}, #{tagId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.whc.mix_api.model.VideoTag">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into video_tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="videoId != null">
                video_id,
            </if>
            <if test="tagId != null">
                tag_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="videoId != null">
                #{videoId,jdbcType=INTEGER},
            </if>
            <if test="tagId != null">
                #{tagId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.whc.mix_api.model.VideoTag">
        update video_tag
        <set>
            <if test="videoId != null">
                video_id = #{videoId,jdbcType=INTEGER},
            </if>
            <if test="tagId != null">
                tag_id = #{tagId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.whc.mix_api.model.VideoTag">
    update video_tag
    set video_id = #{videoId,jdbcType=INTEGER},
      tag_id = #{tagId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="getVideoTagVO" resultMap="TagVO">
    select b.id,b.group_id,b.name from video_tag a join tag b on a.tag_id = b.id where video_id = #{id} order by b.sort,a.update_time desc
  </select>
</mapper>